<UserControl x:Class="CashDepartment.TransactionsConfig.Shell.Content.Params"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:myViewModel="clr-namespace:CashDepartment.TransactionsConfig.Shell.ViewModel"
             xmlns:enum="clr-namespace:CashDepartment.WellKnownBusinessObjects;assembly=CashDepartment.WellKnownBusinessObjects"
			 xmlns:enumCore="clr-namespace:CashDepartment.WellKnownBusinessObjects.Core;assembly=CashDepartment.WellKnownBusinessObjects"
			 xmlns:enumTrans="clr-namespace:CashDepartment.Server.DomainModel.Enities.Transactions;assembly=CashDepartment.TransactionsConfig.Data"
             xmlns:enumTransW="clr-namespace:CashDepartment.WellKnownBusinessObjects.Transactions;assembly=CashDepartment.WellKnownBusinessObjects"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:myData="clr-namespace:CashDepartment.TransactionsConfig.Shell.Data"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.DataContext>
        <myViewModel:ParamsViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        
        <myData:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
        
        <ObjectDataProvider x:Key="EnumBusinessProcessSourceType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enum:BusinessProcessSourceType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumAccountType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enumCore:AccountType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumTransactionAmount" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enumTrans:TransactionAmount"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumTransactionType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enumTransW:TransactionType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumTransactionSubtype" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enumTransW:TransactionSubtype"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumTransactionDocType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enumTransW:TransactionDocType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumPaymentPurposeType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="enumTransW:PaymentPurposeType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <DataTemplate x:Key="ListViewMainDataTemplate1">
            <!--<Grid Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}},Path=Width}">-->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Border BorderThickness="1" Background="AntiqueWhite" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Padding="10,2,0,2" Grid.ColumnSpan="3">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Content="Транзакция: " Margin="0,2,25,2"/>
                        <Label Content="{Binding TransactionEvent}" Grid.Column="1" VerticalAlignment="Center"/>
                        <Label Content="ODB: " Grid.Row="1" Margin="0,2,0,2"/>
                        <Label Content="{Binding ODBType}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"/>
                    </Grid>
                </Border>
                <Border BorderThickness="1,0,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Grid.Row="1" HorizontalAlignment="Left"/>
                <Border BorderThickness="1,0,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Grid.Row="1" HorizontalAlignment="Left" Grid.Column="2"/>
                <Border BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Grid.Column="1"/>
                <ListBox VirtualizingPanel.IsVirtualizing="True" ItemsSource="{Binding Metadata}" Grid.Column="1" SelectionMode="Single" Grid.Row="1" ItemContainerStyle="{DynamicResource LBICS1}">
                    <ListBox.Template>
                        <ControlTemplate>
                            <ItemsPresenter></ItemsPresenter>
                        </ControlTemplate>
                    </ListBox.Template>
                    <ListBox.ItemTemplate>                        
                                    <DataTemplate>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Text="{Binding Introduction}" HorizontalAlignment="Left" Margin="0,15,0,5" Background="Khaki"/>
                                <Border BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Grid.Column="1"/>
                                <DataGrid x:Name="dataInclude" Loaded="dgMain_Loaded1" Grid.Row="1" CanUserReorderColumns="False" ItemsSource="{Binding Params, IsAsync=True}" AutoGenerateColumns="False" GridLinesVisibility="All" RowHeaderWidth="0"  HorizontalAlignment="Stretch" ColumnWidth="*" CanUserAddRows="False" CanUserResizeRows="False" CanUserDeleteRows="True" HeadersVisibility="None" CellStyle="{DynamicResource DataGridCellStyle1}">
                                    <DataGrid.Template>
                                        <ControlTemplate>
                                            <ItemsPresenter></ItemsPresenter>
                                        </ControlTemplate>
                                    </DataGrid.Template>
                                    <DataGrid.Columns>
                                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumBusinessProcessSourceType}}" SelectedValueBinding="{Binding DebitSource}" Header="DebitSource" >
                                            <DataGridComboBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                                </Style>
                                            </DataGridComboBoxColumn.EditingElementStyle>
                                            <DataGridComboBoxColumn.ElementStyle>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridComboBoxColumn.ElementStyle>
                                        </DataGridComboBoxColumn>
                                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumAccountType}}" SelectedValueBinding="{Binding DebitType}" Header="DebitType">
                                            <DataGridComboBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                                </Style>
                                            </DataGridComboBoxColumn.EditingElementStyle>
                                            <DataGridComboBoxColumn.ElementStyle>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridComboBoxColumn.ElementStyle>
                                        </DataGridComboBoxColumn>
                                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumBusinessProcessSourceType}}" SelectedValueBinding="{Binding CreditSource}" Header="CreditSource">
                                            <DataGridComboBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                                </Style>
                                            </DataGridComboBoxColumn.EditingElementStyle>
                                            <DataGridComboBoxColumn.ElementStyle>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridComboBoxColumn.ElementStyle>
                                        </DataGridComboBoxColumn>
                                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumAccountType}}" SelectedValueBinding="{Binding CreditType}" Header="CreditType">
                                            <DataGridComboBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                                </Style>
                                            </DataGridComboBoxColumn.EditingElementStyle>
                                            <DataGridComboBoxColumn.ElementStyle>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridComboBoxColumn.ElementStyle>
                                        </DataGridComboBoxColumn>
                                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumTransactionAmount}}" SelectedValueBinding="{Binding Amount}" Header="Amount" >
                                            <DataGridComboBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                                </Style>
                                            </DataGridComboBoxColumn.EditingElementStyle>
                                            <DataGridComboBoxColumn.ElementStyle>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridComboBoxColumn.ElementStyle>
                                        </DataGridComboBoxColumn>
                                        <DataGridCheckBoxColumn Binding="{Binding IsUnion}" Header="IsUnion"/>
                                        <DataGridCheckBoxColumn Binding="{Binding NeedSymbol}" Header="NeedSymbol" />
                                        <DataGridTextColumn Binding="{Binding Symbol}"  Header="Symbol" />
                                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumTransactionType}}" SelectedValueBinding="{Binding Type}" Header="Type" >
                                            <DataGridComboBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                                </Style>
                                            </DataGridComboBoxColumn.EditingElementStyle>
                                            <DataGridComboBoxColumn.ElementStyle>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridComboBoxColumn.ElementStyle>
                                        </DataGridComboBoxColumn>
                                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumTransactionSubtype}}" SelectedValueBinding="{Binding Subtype}" Header="Subtype">
                                            <DataGridComboBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                                </Style>
                                            </DataGridComboBoxColumn.EditingElementStyle>
                                            <DataGridComboBoxColumn.ElementStyle>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridComboBoxColumn.ElementStyle>
                                        </DataGridComboBoxColumn>
                                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumTransactionDocType}}" SelectedValueBinding="{Binding DocType}" Header="DocType">
                                            <DataGridComboBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                                </Style>
                                            </DataGridComboBoxColumn.EditingElementStyle>
                                            <DataGridComboBoxColumn.ElementStyle>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridComboBoxColumn.ElementStyle>
                                        </DataGridComboBoxColumn>
                                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumPaymentPurposeType}}" SelectedValueBinding="{Binding PaymentPurpose}" Header="PaymentPurpose">
                                            <DataGridComboBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type ComboBox}">
                                                    <Setter Property="IsDropDownOpen" Value="True"></Setter>
                                                </Style>
                                            </DataGridComboBoxColumn.EditingElementStyle>
                                            <DataGridComboBoxColumn.ElementStyle>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                </Style>
                                            </DataGridComboBoxColumn.ElementStyle>
                                        </DataGridComboBoxColumn>
                                        <DataGridTextColumn Binding="{Binding AdditionalParams}" Header="AdditionalParams"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <mui:ModernButton IconData="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z " Grid.Row="1" Grid.RowSpan="3" Margin="-22,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Bottom" Command="{Binding RelativeSource={RelativeSource Findancestor, AncestorType={x:Type UserControl}}, Path=DataContext.AddNewRowCommand}" CommandParameter="{Binding Params}"/>
                            </Grid>
                        </DataTemplate>                                
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </DataTemplate>

        <Style x:Key="LBICS1" TargetType="ListBoxItem">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <!--<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>-->
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>

        <Style x:Key="DataGridCellStyle2" TargetType="{x:Type DataGridCell}">
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="BorderBrush" Value="Transparent"/>
        	<Setter Property="BorderThickness" Value="1"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="{x:Type DataGridCell}">
        				<Border x:Name="Bord1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
        					<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        				</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected" Value="True">
        			<Setter Property="BorderBrush" TargetName="Bord1" Value="Transparent"/>        	
        		</Trigger>
        		<Trigger Property="IsKeyboardFocusWithin" Value="True">
        			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
        		</Trigger>
        		<MultiTrigger>
        			<MultiTrigger.Conditions>
        				<Condition Property="IsSelected" Value="true"/>
        				<Condition Property="Selector.IsSelectionActive" Value="false"/>
        			</MultiTrigger.Conditions>
        			<Setter Property="Background" Value="Transparent"/>
        			<Setter Property="BorderBrush" Value="Transparent"/>
        			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
        		</MultiTrigger>
        		<Trigger Property="IsEnabled" Value="false">
        			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
        		</Trigger>
						</ControlTemplate.Triggers>
        		
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        	
        </Style>

        <myData:WidthConverter x:Key="WidthConverter"/>

    </UserControl.Resources>


    <ScrollViewer x:Name="sv" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto" HorizontalAlignment="Stretch">
        <Grid Style="{StaticResource ContentRoot}" HorizontalAlignment="Stretch" Margin="20,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <DataGrid x:Name="dgMain" Width="{Binding ElementName=sv,Path=ActualWidth,Converter={StaticResource WidthConverter}}" CanUserReorderColumns="False" HorizontalAlignment="Stretch" ColumnWidth="*" AutoGenerateColumns="False" RowHeaderWidth="0" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="False" GridLinesVisibility="All" Visibility="{Binding DataCollection.Count, Converter={StaticResource IntToVisibilityConverter}, Mode=OneWay}">
                <DataGrid.Columns>                    
                    <DataGridTextColumn x:Name="colDebitSource" Header="DebitSource" />
                    <DataGridTextColumn x:Name="colDebitType" Header="DebitType" />
                    <DataGridTextColumn x:Name="colCreditSource" Header="CreditSource" />
                    <DataGridTextColumn x:Name="colCreditType" Header="CreditType" />
                    <DataGridTextColumn x:Name="colAmount" Header="Amount" />
                    <DataGridTextColumn x:Name="colIsUnion" Header="IsUnion" />
                    <DataGridTextColumn x:Name="colNeedSymbol" Header="NeedSymbol" />
                    <DataGridTextColumn x:Name="colSymbol" Header="Symbol" />
                    <DataGridTextColumn x:Name="colType" Header="Type" />
                    <DataGridTextColumn x:Name="colSubtype" Header="Subtype" />
                    <DataGridTextColumn x:Name="colDocType" Header="DocType" />
                    <DataGridTextColumn x:Name="colPaymentPurpose" Header="PaymentPurpose" />
                    <DataGridTextColumn x:Name="colAdditionalParams" Header="AdditionalParams" />
                </DataGrid.Columns>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                        <Setter Property="Padding" Value="10,10,10,10"/>
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="Background" Value="Orange" />
                        <Setter Property="Foreground" Value="White" />
                        <Setter Property="FontSize" Value="18"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
            </DataGrid>
            <ListBox x:Name="lbMain" VirtualizingPanel.IsVirtualizing="True" Width="{Binding ElementName=dgMain,Path=ActualWidth}"  HorizontalAlignment="Stretch" Grid.Row="1" ItemsSource="{Binding DataCollection, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" ItemTemplate="{DynamicResource ListViewMainDataTemplate1}" ItemContainerStyle="{DynamicResource LBICS1}">
                <ListBox.Template>
                    <ControlTemplate>
                        <ItemsPresenter></ItemsPresenter>
                    </ControlTemplate>
                </ListBox.Template>
            </ListBox>
        </Grid>
    </ScrollViewer>
</UserControl>
