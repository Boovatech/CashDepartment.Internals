<UserControl x:Class="CashDepartment.TransactionsConfig.Shell.Content.MetaDataContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:enumTran="clr-namespace:CashDepartment.WellKnownBusinessObjects.Transactions;assembly=CashDepartment.WellKnownBusinessObjects"
			 xmlns:enumCore="clr-namespace:CashDepartment.WellKnownBusinessObjects.Core;assembly=CashDepartment.WellKnownBusinessObjects"
			 xmlns:enumEnq="clr-namespace:CashDepartment.WellKnownBusinessObjects.Enquiries;assembly=CashDepartment.WellKnownBusinessObjects"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:myViewModel="clr-namespace:CashDepartment.TransactionsConfig.Shell.ViewModel"
             xmlns:myData="clr-namespace:CashDepartment.TransactionsConfig.Shell.Data"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">

    <UserControl.DataContext>
        <myViewModel:MetaDataContentViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>

        <myData:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>

        <myData:myODBTypeConv x:Key="ODBTypeConv"/>

        <ObjectDataProvider x:Key="EnumTransactionEventResult" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enumTran:TransactionEventResult"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumPartyType" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enumCore:PartyType"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="EnumEnquirySolvency" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="enumEnq:EnquirySolvency"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <DataTemplate x:Key="ListViewMainDataTemplate1">
            <Grid Margin="0,0,0,0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Label Content="{Binding TransactionEvent}" FontWeight="Bold" Margin="0,10,0,10"/>
                    <Label Content="{Binding ODBType}" FontWeight="Bold" Margin="50,10,0,10"/>
                </StackPanel>
                <DataGrid ItemsSource="{Binding Metadata}" AutoGenerateColumns="False" RowHeaderWidth="0" HeadersVisibility="None" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="True" Grid.Row="1" GridLinesVisibility="All" CellStyle="{DynamicResource DataGridCellStyle1}">
                    <DataGrid.Columns>
                        <!--<DataGridTemplateColumn>
                            <DataGridTemplateColumn.Header>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource Findancestor, AncestorType={x:Type DataGrid}}, Path=DataContext.TransactionEvent}"/>
                        </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding testData}"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>-->
                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumTransactionEventResult}}" SelectedValueBinding="{Binding EventResult}" Width="{Binding Width, Mode=TwoWay, Source={x:Reference colResult}}"/>
                        <DataGridCheckBoxColumn Binding="{Binding ForDefaultCurrency}" Width="{Binding Width, Mode=TwoWay, Source={x:Reference colDefaultCurrency}}"/>
                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumPartyType}}" SelectedValueBinding="{Binding PartyType}" Width="{Binding Width, Mode=TwoWay, Source={x:Reference colPartyType}}"/>
                        <DataGridCheckBoxColumn Binding="{Binding IsOurBank}" Width="{Binding Width, Mode=TwoWay, Source={x:Reference colIsOurBank}}"/>
                        <DataGridCheckBoxColumn Binding="{Binding IsResident}" Width="{Binding Width, Mode=TwoWay, Source={x:Reference colIsResident}}"/>
                        <DataGridComboBoxColumn ItemsSource="{Binding Source={StaticResource EnumEnquirySolvency}}" SelectedValueBinding="{Binding Solvency}" Width="{Binding Width, Mode=TwoWay, Source={x:Reference colSolvency}}"/>
                        <DataGridCheckBoxColumn Binding="{Binding IsExchange}" Width="{Binding Width, Mode=TwoWay, Source={x:Reference colIsExchange}}"/>
                        <DataGridCheckBoxColumn Binding="{Binding IsDefaultCurrency}" Width="{Binding Width, Mode=TwoWay, Source={x:Reference colIsDefaultCurrency}}"/>
                        <DataGridCheckBoxColumn Binding="{Binding IsPrepaid}" Width="{Binding Width, Mode=TwoWay, Source={x:Reference colIsPrepaid}}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <mui:ModernButton IconData="F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z " Grid.Row="2"  HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5,0,0" Command="{Binding DataContext.AddNewRowCommand, RelativeSource={RelativeSource Findancestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding Metadata}"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="ListViewItemStyle1" TargetType="{x:Type ListViewItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource ItemText}"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Grid Background="{TemplateBinding Background}">
                            <Border x:Name="Selection" Visibility="Collapsed"/>
                            <GridViewRowPresenter Columns="{TemplateBinding GridView.ColumnCollection}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Grid.RowSpan="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="contentPresenter" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Visibility" TargetName="Selection" Value="Visible"/>
                                <Setter Property="Background" TargetName="Selection" Value="{DynamicResource ItemBackgroundHover}"/>
                                <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <!--<Setter Property="Visibility" TargetName="Selection" Value="Visible"/>
        						<Setter Property="Background" TargetName="Selection" Value="{DynamicResource ItemBackgroundSelected}"/>
        						<Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}"/>-->
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
        <Style x:Key="DataGridCellStyle1" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>


    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" HorizontalAlignment="Left">
    <Grid Style="{StaticResource ContentRoot}">      
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
            <DataGrid AutoGenerateColumns="False" RowHeaderWidth="0" CanUserResizeRows="False" CanUserAddRows="False" CanUserDeleteRows="False" Margin="5,0,0,0" GridLinesVisibility="All" Visibility="{Binding DataCollection.Count, Converter={StaticResource IntToVisibilityConverter}, Mode=OneWay}">
            <DataGrid.Columns>
                <DataGridComboBoxColumn x:Name="colResult" Header="Result" Width="100"/>
                <DataGridCheckBoxColumn x:Name="colDefaultCurrency" Header="DefaultCurrency"  Width="100"/>
                <DataGridComboBoxColumn x:Name="colPartyType" Header="PartyType" Width="100"/>
                <DataGridCheckBoxColumn x:Name="colIsOurBank" Header="IsOurBank"  Width="100"/>
                <DataGridCheckBoxColumn x:Name="colIsResident" Header="IsResident"  Width="100"/>
                <DataGridComboBoxColumn x:Name="colSolvency" Header="Solvency" Width="100" />
                <DataGridCheckBoxColumn x:Name="colIsExchange" Header="IsExchange"  Width="100"/>
                <DataGridCheckBoxColumn x:Name="colIsDefaultCurrency" Header="IsDefaultCurrency"  Width="100"/>
                <DataGridCheckBoxColumn x:Name="colIsPrepaid" Header="IsPrepaid"  Width="100"/>
            </DataGrid.Columns>
        </DataGrid>
        <ListView ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1" ItemsSource="{Binding DataCollection}" ItemTemplate="{DynamicResource ListViewMainDataTemplate1}" ItemContainerStyle="{DynamicResource ListViewItemStyle1}"/>
    </Grid>
    </ScrollViewer>
</UserControl>
